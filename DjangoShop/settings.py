"""
Django settings for DjangoShop project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ef_5uxjmk5&kjyfs8!&mp8_cyy*zgzb&#)5v7tx!d#4g0&kymh'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'Store',
    'Buyer',
    'ckeditor',
    'ckeditor_uploader',
    'rest_framework',
    'django_filters',
    'djcelery'
]

MIDDLEWARE = [
    # 'django.middleware.cache.UpdateCacheMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 'DjangoShop.middleware.MiddlewareTest',
    # 'django.middleware.cache.FetchFromCacheMiddleware',
]

# 全栈缓存配置，全局缓存
# CACHE_MIDDLEWARE_KEY_PREFIX = ''
# CACHE_MIDDLEWARE_SECONDS = 600


ROOT_URLCONF = 'DjangoShop.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'DjangoShop.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False # 为True 默认使用UTC 0时区


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR,'static'),
)

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'static')

# STATIC_ROOT = os.path.join(BASE_DIR,'static')

CKEDITOR_UPLOAD_PATH = 'static/upload'
CKEDITOR_IMAGE_BACKEND = 'pillow'

# v4.1 restful接口配置
REST_FRAMEWORK = {
    # 权限
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],

    # 自定义返回内容
    'DEFAULT_RENDERER_CLASSES': (
        'utils.rendererresponse.Customrenderer',
    ),

    # 过滤器
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',# django-filters自带的查询过滤器
    ),

    # 分页
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE':5,

}


# 配置邮件服务器
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' # 发送邮件采用smtp服务

EMAIL_USE_TLS = False  #是否使用tls加密方式

EMAIL_HOST = 'smtp.qq.com'
EMAIL_PORT = 25
EMAIL_HOST_USER = '996623077@qq.com'
EMAIL_HOST_PASSWORD = 'euaqgfrwmsuvbcfi'
DEFAULT_FROM_EMAIL = '996623077@qq.com'


# celery配置
import djcelery  # 导入django-celery模块
djcelery.setup_loader()  # 加载模块
BROKER_URL = 'redis://127.0.0.1:6379/1'  # 任务容器地址，Redis数据库地址
CELERY_IMPORTS = ('CeleryTask.tasks')  # 具体的任务文件
CELERY_TIMEZONE = 'Asia/Shanghai'  # celery时区
CELERYBEAT_SCHEDULER = 'djcelery.schedulers.DatabaseScheduler'  # celery处理器


# celery 的定时器
from celery.schedules import crontab
from celery.schedules import timedelta

CELERYBEAT_SCHEDULE = {  # 定时器策略
    # 定时任务一：每隔30s运行一次
    u'测试定时器1': {
        'task': 'CeleryTask.tasks.taskExample',
        # 'schedule': crontab(minute='*/2'),
        'schedule': timedelta(seconds=30),
        'args': (),
    },
    u'熊大的叫床服务': {
        'task': 'CeleryTask.tasks.DingTalk',
        # 'schedule': crontab(minute='*/2'),
        'schedule': timedelta(seconds=3),
        'args': (),
    },
}

# The cache backends to use.
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',# 默认使用本地缓存
#     }
# }

# 缓存配置
# CACHES = {
#     'default': {
#         'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',  # 声明使用memcache缓存
#         'LOCATION': [
#             '127.0.0.1:11211'
#         ]  # 配置cache地址
#     }
# }

# Redis数据库缓存配置
# CACHES = {
#     'default': {
#         'BACKEND': 'django_redis.cache.RedisCache',  # 声明使用redis数据库缓存
#         'LOCATION': [
#             'redis://127.0.0.1:6379/1'
#         ],  # 配置cache地址
#         'OPTIONS': {
#             'CLIENT_CLASS': 'django_redis.client.DefaultClient'
#         }
#     }
# }

# 使用默认数据库缓存
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',  # 使用Django默认数据库缓存
        'LOCATION': 'cache_table' # 存放缓存的表
    }
}